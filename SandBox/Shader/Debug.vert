#version 450

layout (location = 0) out vec2 o_uv;
layout (location = 1) out uint o_textureIdx;

/*  UV layout in vulkan                     Normalized device coordinates
 *  (0, 0)              (1, 0)  top ^       (-1, -1)            (1, -1)
 *  +-------------------+                   +-------------------+
 *  |                   |                   |                   |
 *  |       (u, v)      |                   |       (0, 0)      |
 *  |                   |                   |                   |
 *  +-------------------+                   +-------------------+
 *  (0, 1)              (1, 1)  bottom v    (-1, 1)             (1, 1)
*/
vec2 uvs[48]            = vec2[] (vec2 ( 0.0,  1.0), vec2 ( 1.0,  1.0), vec2 ( 1.0,  0.0),
                                  vec2 ( 0.0,  1.0), vec2 ( 1.0,  0.0), vec2 ( 0.0,  0.0),

                                  vec2 ( 0.0,  1.0), vec2 ( 1.0,  1.0), vec2 ( 1.0,  0.0),
                                  vec2 ( 0.0,  1.0), vec2 ( 1.0,  0.0), vec2 ( 0.0,  0.0),

                                  vec2 ( 0.0,  1.0), vec2 ( 1.0,  1.0), vec2 ( 1.0,  0.0),
                                  vec2 ( 0.0,  1.0), vec2 ( 1.0,  0.0), vec2 ( 0.0,  0.0),

                                  vec2 ( 0.0,  1.0), vec2 ( 1.0,  1.0), vec2 ( 1.0,  0.0),
                                  vec2 ( 0.0,  1.0), vec2 ( 1.0,  0.0), vec2 ( 0.0,  0.0),

                                  vec2 ( 0.0,  1.0), vec2 ( 1.0,  1.0), vec2 ( 1.0,  0.0),
                                  vec2 ( 0.0,  1.0), vec2 ( 1.0,  0.0), vec2 ( 0.0,  0.0),

                                  vec2 ( 0.0,  1.0), vec2 ( 1.0,  1.0), vec2 ( 1.0,  0.0),
                                  vec2 ( 0.0,  1.0), vec2 ( 1.0,  0.0), vec2 ( 0.0,  0.0),

                                  vec2 ( 0.0,  1.0), vec2 ( 1.0,  1.0), vec2 ( 1.0,  0.0),
                                  vec2 ( 0.0,  1.0), vec2 ( 1.0,  0.0), vec2 ( 0.0,  0.0),

                                  vec2 ( 0.0,  1.0), vec2 ( 1.0,  1.0), vec2 ( 1.0,  0.0),
                                  vec2 ( 0.0,  1.0), vec2 ( 1.0,  0.0), vec2 ( 0.0,  0.0));

vec2 positions[48]      = vec2[] (vec2 (-1.0, -0.5), vec2 (-0.5, -0.5), vec2 (-0.5, -1.0),
                                  vec2 (-1.0, -0.5), vec2 (-0.5, -1.0), vec2 (-1.0, -1.0),

                                  vec2 (-1.0,  0.0), vec2 (-0.5,  0.0), vec2 (-0.5, -0.5),
                                  vec2 (-1.0,  0.0), vec2 (-0.5, -0.5), vec2 (-1.0, -0.5),

                                  vec2 (-1.0,  0.5), vec2 (-0.5,  0.5), vec2 (-0.5,  0.0),
                                  vec2 (-1.0,  0.5), vec2 (-0.5,  0.0), vec2 (-1.0,  0.0),

                                  vec2 (-1.0,  1.0), vec2 (-0.5,  1.0), vec2 (-0.5,  0.5),
                                  vec2 (-1.0,  1.0), vec2 (-0.5,  0.5), vec2 (-1.0,  0.5),

                                  vec2 (-0.5, -0.5), vec2 ( 0.0, -0.5), vec2 ( 0.0, -1.0),
                                  vec2 (-0.5, -0.5), vec2 ( 0.0, -1.0), vec2 (-0.5, -1.0),

                                  vec2 (-0.5,  0.0), vec2 ( 0.0,  0.0), vec2 ( 0.0, -0.5),
                                  vec2 (-0.5,  0.0), vec2 ( 0.0, -0.5), vec2 (-0.5, -0.5),

                                  vec2 (-0.5,  0.5), vec2 ( 0.0,  0.5), vec2 ( 0.0,  0.0),
                                  vec2 (-0.5,  0.5), vec2 ( 0.0,  0.0), vec2 (-0.5,  0.0),

                                  vec2 (-0.5,  1.0), vec2 ( 0.0,  1.0), vec2 ( 0.0,  0.5),
                                  vec2 (-0.5,  1.0), vec2 ( 0.0,  0.5), vec2 (-0.5,  0.5));
/*  Textures are overlayed as shown below
 *  +-------+-------+---------------+
 *  |   0   |   4   |               |
 *  |       |       |               |
 *  +-------+-------+               |
 *  |   1   |   5   |               |
 *  |       |       |               |
 *  +-------+-------+               |
 *  |   2   |   6   |               |
 *  |       |       |               |
 *  +-------+-------+               |
 *  |   3   |   7   |               |
 *  |       |       |               |
 *  +-------+-------+---------------+
*/
uint textureIndices[48] = uint[] (0,                 0,                 0,
                                  0,                 0,                 0,

                                  1,                 1,                 1,
                                  1,                 1,                 1,

                                  2,                 2,                 2,
                                  2,                 2,                 2,

                                  3,                 3,                 3,
                                  3,                 3,                 3,

                                  4,                 4,                 4,
                                  4,                 4,                 4,

                                  5,                 5,                 5,
                                  5,                 5,                 5,

                                  6,                 6,                 6,
                                  6,                 6,                 6,

                                  7,                 7,                 7,
                                  7,                 7,                 7);

void main (void) {
    gl_Position  = vec4 (positions[gl_VertexIndex], 0.0, 1.0);

    o_uv         = uvs[gl_VertexIndex];
    o_textureIdx = textureIndices[gl_VertexIndex];
}